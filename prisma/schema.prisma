generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model refresh_tokens {
  id         Int      @id @default(autoincrement())
  user_id    Int
  token      String   @db.VarChar(1024)
  created_at DateTime @db.Timestamp(0)
  expires    DateTime @db.Timestamp(0)
  user       users    @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "refresh_tokens_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id               Int                @id @default(autoincrement())
  username         String             @db.VarChar(36)
  display_name     String?            @db.VarChar(48)
  password         String             @db.VarChar(512)
  email_address    String             @db.VarChar(64)
  max_media        Int
  created_at       DateTime           @default(now()) @db.DateTime(0)
  updated_at       DateTime           @default(now()) @db.DateTime(0)
  conversion_pages conversion_pages[]
  media            media[]
  refresh_tokens   refresh_tokens[]
}

model conversion_pages {
  id          String               @id @default(cuid())
  name        String               @db.VarChar(64)
  description String?              @db.VarChar(512)
  type        conversion_page_type
  created_at  DateTime             @default(now()) @db.DateTime(0)
  updated_at  DateTime             @default(now()) @db.DateTime(0)
  live_mode   Boolean              @default(false)
  creator_id  Int
  creator     users                @relation(fields: [creator_id], references: [id], onUpdate: Restrict, map: "conversion_pages_ibfk_1")
  domains     page_domains[]

  @@index([creator_id], map: "conversion_pages_ibfk_1")
}

model media {
  id         Int        @id @default(autoincrement())
  user_id    Int
  type       media_type
  created_at DateTime   @db.DateTime(0)
  path       String     @db.VarChar(32)
  name       String     @db.VarChar(32)
  size       Int
  users      users      @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "media_ibfk_1")

  @@index([user_id], map: "user")
}

model page_domains {
  id              Int              @id @default(autoincrement())
  page_id         String
  created_at      DateTime         @db.DateTime(0)
  renewed_at      DateTime?        @db.DateTime(0)
  domain          String           @db.VarChar(64)
  system_domain   Boolean
  conversion_page conversion_pages @relation(fields: [page_id], references: [id], onUpdate: Restrict, map: "page_domains_ibfk_1")

  @@index([page_id], map: "page_id")
}

enum conversion_page_type {
  PRODUCT
  EMAIL
}

enum media_type {
  VIDEO
  IMAGE
  UNKNOWN
}
